{"version":3,"sources":["components/user-profile/user-profile.js","components/statistics/statistics.js","components/friends/friendListItem.js","components/friends/friendList.js","components/transactions/transactionHistory.js","App/App.js","index.js"],"names":["UserProfile","props","username","tag","location","avatar","stats","className","style","profile","description","src","alt","label","quantity","followers","views","likes","Statistics","title","statistics","toUpperCase","statList","map","id","percentage","item","backgroundColor","randomColor","Math","floor","random","toString","FriendListItem","name","isOnline","status","border","width","FriendList","friends","friendList","friend","TransactionHistory","items","transactionTable","tableHead","tableBody","type","amount","currency","tableList","App","user","data","transactions","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.301f90a0.chunk.js","sourcesContent":["import PropTypes from 'prop-types';\nimport style from './user-profile.module.css';\n\nexport default function UserProfile(props) {\n  const { username, tag, location, avatar, stats } = props;\n  return (\n    <div className={style.profile} key={tag}>\n      <div className={style.description}>\n        <img src={avatar} alt={username} className={style.avatar} />\n        <p className={style.username}>{username}</p>\n        <p className={style.tag}>@{tag}</p>\n        <p className={style.location}>{location}</p>\n      </div>\n\n      <ul className={style.stats}>\n        <li>\n          <span className={style.label}>Followers:</span>\n          <span className={style.quantity}> {stats.followers}</span>\n        </li>\n        <li>\n          <span className={style.label}>Views:</span>\n          <span className={style.quantity}> {stats.views}</span>\n        </li>\n        <li>\n          <span className={style.label}>Likes:</span>\n          <span className={style.quantity}> {stats.likes}</span>\n        </li>\n      </ul>\n    </div>\n  );\n}\nUserProfile.propTypes = {\n  username: PropTypes.string,\n  tag: PropTypes.string,\n  location: PropTypes.string,\n  avatar: PropTypes.string,\n  stats: PropTypes.shape({\n    followers: PropTypes.number,\n    views: PropTypes.number,\n    likes: PropTypes.number,\n  }),\n};\n","import PropTypes from 'prop-types';\nimport style from './statistics.module.css';\n\nexport default function Statistics({ title, stats }) {\n  return (\n    <section className={style.statistics}>\n      {title && <h2 className={style.title}>{title.toUpperCase()}</h2>}\n\n      <ul className={style.statList}>\n        {stats.map(({ id, label, percentage }) => (\n          <li\n            className={style.item}\n            key={id}\n            style={{ backgroundColor: randomColor() }}\n          >\n            <span className={style.label}>{label}</span>\n            <span className={style.percentage}>{percentage}%</span>\n          </li>\n        ))}\n      </ul>\n    </section>\n  );\n}\nStatistics.propTypes = {\n  title: PropTypes.string,\n  id: PropTypes.string,\n  label: PropTypes.string,\n  percentage: PropTypes.number,\n};\nconst randomColor = () =>\n  '#' + Math.floor(Math.random() * 16777215).toString(16);\n","import PropTypes from 'prop-types';\nimport style from './friends.module.css';\n\nexport default function FriendListItem({ avatar, name, isOnline, id }) {\n  return (\n    <>\n      <li key={id} className={style.item}>\n        {isOnline ? (\n          <span className={style.status} style={{ border: 'green' }}>\n            {isOnline}\n          </span>\n        ) : (\n          <span className={style.status} style={{ border: 'red' }}>\n            {isOnline}\n          </span>\n        )}\n        <img className={style.avatar} src={avatar} alt={name} width=\"48\" />\n        <p className={style.name}>{name}</p>\n      </li>\n    </>\n  );\n}\nFriendListItem.propTypes = {\n  avatar: PropTypes.string,\n  name: PropTypes.string,\n  isOnline: PropTypes.bool,\n  id: PropTypes.number,\n};\n","import FriendListItem from './friendListItem';\nimport PropTypes from 'prop-types';\nimport style from './friends.module.css';\n\nexport default function FriendList({ friends }) {\n  return (\n    <ul className={style.friendList}>\n      {friends.map(friend => (\n        <FriendListItem\n          id={friend.id}\n          avatar={friend.avatar}\n          name={friend.name}\n          isOnline={friend.isOnline}\n        />\n      ))}\n    </ul>\n  );\n}\nFriendList.propTypes = {\n  friends: PropTypes.arrayOf(PropTypes.shape),\n};\n","import PropTypes from 'prop-types';\nimport style from './transactionHistory.module.css';\n\nexport default function TransactionHistory({ items }) {\n  return (\n    <table className={style.transactionTable}>\n      <thead className={style.tableHead}>\n        <tr>\n          <th className={style.item}>Type</th>\n          <th className={style.item}>Amount</th>\n          <th className={style.item}>Currency</th>\n        </tr>\n      </thead>\n\n      <tbody className={style.tableBody}>\n        {items.map(({ id, type, amount, currency }) => (\n          <tr key={id} className={style.tableList}>\n            <td className={style.item}>{type}</td>\n            <td className={style.item}>{amount}</td>\n            <td className={style.item}>{currency}</td>\n          </tr>\n        ))}\n      </tbody>\n    </table>\n  );\n}\nTransactionHistory.propTypes = {\n  items: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      type: PropTypes.string.isRequired,\n      amount: PropTypes.string.isRequired,\n      currency: PropTypes.string.isRequired,\n    }),\n  ),\n};\n","import './App.css';\n\nimport UserProfile from '../components/user-profile/user-profile';\nimport user from '../data/user-profile.json';\n\nimport Statistics from '../components/statistics/statistics';\nimport data from '../data/statistics.json';\n\nimport FriendList from '../components/friends/friendList';\nimport friends from '../data/friends.json';\n\nimport TransactionHistory from '../components/transactions/transactionHistory';\nimport transactions from '../data/transactions.json';\n\nexport default function App() {\n  return (\n    <div>\n      <UserProfile\n        username={user.username}\n        tag={user.tag}\n        location={user.location}\n        avatar={user.avatar}\n        stats={user.stats}\n      />\n      <Statistics title=\"Upload stats\" stats={data} />;\n      <FriendList friends={friends} />,\n      <TransactionHistory items={transactions} />;\n    </div>\n  );\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// // If you want to start measuring performance in your app, pass a function\n// // to log results (for example: reportWebVitals(console.log))\n// // or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals();\n"],"sourceRoot":""}